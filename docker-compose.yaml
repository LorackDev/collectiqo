# version: '3'
services:
  web:
    image: clq-app
    env_file: ./.env.docker
    ports:
      - "${PORT}:${PORT}"
    volumes:
      #- ~/.certificates/collectiqo/:/root/.certificates/collectiqo:ro # mount local keys into container for dev purposes
      - /home/collectiqo/local_cert/collectiqo_rs:/root/.certificates/collectiqo:ro # mount local keys into container for dev purposes
    networks:
      - proxy-network
      - app-network

  mysql:
    image: lorackdev/clq-mysql-multiarch
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_DATABASE_PASSWORD}
    ports:
      - "${MYSQL_DATABASE_PORT}:${MYSQL_DATABASE_PORT}"
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "${MONGO_DATABASE_PORT}:${MONGO_DATABASE_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DATABASE_PASSWORD}
    networks:
      - app-network

  test-webserver:
    container_name: test-webserver
    image: arm64v8/httpd:latest
    restart: unless-stopped
    volumes:
      - ./webtest:/usr/local/apache2/htdocs:ro
    networks:
      - proxy-network

  nginx-reverse-proxy:
    container_name: nginx-reverse-proxy
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt/:ro
      - ./certbot/www:/var/www/certbot/:ro
    networks:
      - proxy-network

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    volumes:
      - ./certbot/conf:/etc/letsencrypt/:rw
      - ./certbot/www:/var/www/certbot/:rw
    networks:
      - proxy-network
    depends_on:
      - nginx-reverse-proxy

networks:
    app-network:
        driver: bridge
    proxy-network:
        driver: bridge